<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Virtual Lesson - NextDoor Skills</title>
    
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --brand-bg: #1A1D24; /* Charcoal */
            --brand-primary: #4FD1C5; /* Teal */
            --brand-accent: #E07A5F; /* Terracotta */
            --brand-text: #EAEAEA;
            --brand-text-muted: #A0AEC0;
            --overlay-bg: rgba(26, 29, 36, 0.8);
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--brand-bg);
            color: var(--brand-text);
            overscroll-behavior: contain;
        }

        /* --- Custom Animations & Styles --- */
        .ui-controls {
            transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
        }
        .ui-hidden .ui-controls {
            opacity: 0;
            transform: translateY(20px);
            pointer-events: none;
        }

        .panel {
            transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }
        .panel-hidden {
            transform: translateY(100%);
        }
        
        .notes-overlay {
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        .notes-hidden {
            opacity: 0;
            visibility: hidden;
        }
    </style>
    
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'sans': ['Inter', 'sans-serif'],
                    },
                    colors: {
                        'brand-bg': '#1A1D24',
                        'brand-primary': '#4FD1C5',
                        'brand-accent': '#E07A5F',
                        'brand-text': '#EAEAEA',
                        'brand-text-muted': '#A0AEC0',
                        'overlay-bg': 'rgba(26, 29, 36, 0.8)',
                    },
                }
            }
        }
    </script>
</head>
<body class="w-screen h-screen overflow-hidden">

    <div id="video-container" class="relative w-full h-full bg-black">
        <!-- Teacher's Video Feed (Placeholder) -->
        <img src="https://images.unsplash.com/photo-1588791983021-3a4a09e3a35e?q=80&w=2070&auto=format&fit=crop&ixlib=rb-4.0.3" class="w-full h-full object-cover" alt="Teacher's video feed">
        <div class="absolute inset-0 bg-black/20"></div>

        <!-- Self-View (Draggable) -->
        <div id="self-view" class="absolute bottom-28 md:bottom-24 right-4 w-32 h-44 md:w-40 md:h-56 bg-black rounded-2xl shadow-lg border-2 border-white/20 cursor-move overflow-hidden">
             <img src="https://images.unsplash.com/photo-1531746020798-57552c26eac0?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3" class="w-full h-full object-cover" alt="User's video feed">
        </div>

        <!-- UI Controls Container -->
        <div id="ui-container" class="absolute inset-0 flex flex-col justify-between p-4 md:p-6">
            <!-- Top info (optional) -->
            <div class="ui-controls flex justify-between items-center">
                <div class="bg-black/30 backdrop-blur-sm px-3 py-1.5 rounded-full text-sm">
                    <span>Classical Guitar with Priya</span>
                </div>
                <div class="bg-red-500 text-white px-3 py-1.5 rounded-full text-sm font-bold flex items-center space-x-2">
                    <span class="w-2 h-2 bg-white rounded-full animate-pulse"></span>
                    <span>REC 24:15</span>
                </div>
            </div>

            <!-- Main Control Bar -->
            <div class="ui-controls flex flex-col items-center space-y-4">
                 <!-- Optional Feature Buttons -->
                 <div class="flex items-center space-x-3">
                    <button class="w-12 h-12 bg-black/30 backdrop-blur-sm rounded-full flex items-center justify-center text-brand-text hover:bg-white/20 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12" /></svg>
                    </button>
                    <button id="notes-btn" class="w-12 h-12 bg-black/30 backdrop-blur-sm rounded-full flex items-center justify-center text-brand-text hover:bg-white/20 transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" /></svg>
                    </button>
                </div>

                <div class="bg-black/30 backdrop-blur-lg p-3 rounded-full flex items-center space-x-3 md:space-x-4">
                    <button id="mic-toggle" class="w-14 h-14 bg-white/20 rounded-full flex items-center justify-center text-white">
                        <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z" /></svg>
                    </button>
                    <button id="video-toggle" class="w-14 h-14 bg-white/20 rounded-full flex items-center justify-center text-white">
                        <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" /></svg>
                    </button>
                    <button id="chat-btn" class="w-14 h-14 bg-white/20 rounded-full flex items-center justify-center text-white">
                        <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" /></svg>
                    </button>
                    <button class="w-16 h-16 bg-red-600 rounded-full flex items-center justify-center text-white">
                         <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" /></svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Chat Panel -->
        <div id="chat-panel" class="panel panel-hidden absolute bottom-0 left-0 right-0 h-2/5 bg-overlay-bg backdrop-blur-md rounded-t-3xl z-30">
             <div class="p-4 h-full flex flex-col">
                <div class="text-center mb-4 relative">
                    <h3 class="font-bold">Lesson Chat</h3>
                    <button id="close-chat-btn" class="absolute top-0 right-0 text-brand-text-muted">✕</button>
                </div>
                <div class="flex-grow space-y-4 overflow-y-auto text-sm">
                    <div><span class="font-semibold text-brand-primary">Priya:</span><span> Hi Neha! Let's start with the C chord.</span></div>
                    <div><span class="font-semibold text-brand-text">You:</span><span> Sounds good! Like this?</span></div>
                </div>
                <div class="mt-4 flex space-x-2">
                    <input type="text" placeholder="Type a message..." class="w-full bg-black/20 border border-white/20 rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-brand-primary">
                    <button class="bg-brand-primary text-brand-bg w-10 h-10 rounded-full flex-shrink-0 flex items-center justify-center">➤</button>
                </div>
             </div>
        </div>

        <!-- Notes Panel -->
        <div id="notes-panel" class="notes-hidden absolute inset-0 bg-black/50 backdrop-blur-sm z-40 flex items-center justify-center p-4">
            <div class="w-full max-w-lg bg-overlay-bg rounded-2xl p-6 relative">
                 <button id="close-notes-btn" class="absolute top-4 right-4 text-brand-text-muted">✕</button>
                <h3 class="font-bold text-lg mb-4">Shared Lesson Notes</h3>
                <textarea class="w-full h-64 bg-black/20 border border-white/20 rounded-lg p-3 focus:outline-none focus:ring-2 focus:ring-brand-primary" placeholder="Type your notes here..."></textarea>
                <button class="w-full mt-4 bg-brand-primary text-brand-bg font-bold py-3 rounded-lg">Export Notes</button>
            </div>
        </div>
    </div>
    
    <script>
        // --- UI VISIBILITY ---
        const videoContainer = document.getElementById('video-container');
        const uiContainer = document.getElementById('ui-container');
        let uiVisibilityTimeout;

        function showUI() {
            uiContainer.classList.remove('ui-hidden');
            clearTimeout(uiVisibilityTimeout);
            uiVisibilityTimeout = setTimeout(() => uiContainer.classList.add('ui-hidden'), 3000);
        }
        videoContainer.addEventListener('click', showUI);
        showUI(); // Initial display

        // --- PANEL LOGIC ---
        const chatBtn = document.getElementById('chat-btn');
        const chatPanel = document.getElementById('chat-panel');
        const closeChatBtn = document.getElementById('close-chat-btn');
        const notesBtn = document.getElementById('notes-btn');
        const notesPanel = document.getElementById('notes-panel');
        const closeNotesBtn = document.getElementById('close-notes-btn');

        chatBtn.addEventListener('click', (e) => { e.stopPropagation(); chatPanel.classList.remove('panel-hidden'); });
        closeChatBtn.addEventListener('click', (e) => { e.stopPropagation(); chatPanel.classList.add('panel-hidden'); });
        notesBtn.addEventListener('click', (e) => { e.stopPropagation(); notesPanel.classList.remove('notes-hidden'); });
        closeNotesBtn.addEventListener('click', (e) => { e.stopPropagation(); notesPanel.classList.add('notes-hidden'); });
        
        // --- CONTROL TOGGLES ---
        const micToggle = document.getElementById('mic-toggle');
        const videoToggle = document.getElementById('video-toggle');
        
        [micToggle, videoToggle].forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.stopPropagation();
                btn.classList.toggle('bg-red-500');
                btn.classList.toggle('bg-white/20');
                const hasSlash = btn.querySelector('.slash');
                if(hasSlash) {
                    hasSlash.remove();
                } else {
                    btn.innerHTML += '<path class="slash" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6"></path>';
                }
            });
        });

        // --- DRAGGABLE SELF-VIEW ---
        const selfView = document.getElementById('self-view');
        let isDragging = false, offsetX, offsetY;

        selfView.addEventListener('mousedown', (e) => {
            isDragging = true;
            offsetX = e.clientX - selfView.offsetLeft;
            offsetY = e.clientY - selfView.offsetTop;
            selfView.style.transition = 'none';
        });

        document.addEventListener('mousemove', (e) => {
            if (!isDragging) return;
            let newX = e.clientX - offsetX;
            let newY = e.clientY - offsetY;
            
            const parentRect = videoContainer.getBoundingClientRect();
            const selfRect = selfView.getBoundingClientRect();

            newX = Math.max(16, Math.min(newX, parentRect.width - selfRect.width - 16));
            newY = Math.max(16, Math.min(newY, parentRect.height - selfRect.height - 16));

            selfView.style.left = `${newX}px`;
            selfView.style.top = `${newY}px`;
        });

        document.addEventListener('mouseup', () => {
            isDragging = false;
            selfView.style.transition = '';
        });

    </script>
</body>
</html>
