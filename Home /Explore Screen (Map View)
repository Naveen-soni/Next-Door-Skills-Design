

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <title>NextDoor Skills - Home</title>
    
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Google Fonts: Poppins -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- LeafletJS CSS & JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
    
    <style>
        /* Base styles */
        body {
            font-family: 'Poppins', sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            background-color: #FDFCF9; /* brand-cream */
        }

        /* --- Custom Map & UI Styles --- */

        /* Leaflet map container */
        #map {
            height: 100%;
            width: 100%;
            z-index: 10;
        }

        /* Custom popup styling */
        .leaflet-popup-content-wrapper {
            background: #FDFCF9;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }
        .leaflet-popup-content {
            margin: 15px;
            font-size: 14px;
            line-height: 1.6;
        }
        .leaflet-popup-tip-container {
            display: none; /* Hides the default arrow tip */
        }

        /* User's location marker with glowing animation */
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0.7); }
            70% { box-shadow: 0 0 0 15px rgba(52, 152, 219, 0); }
            100% { box-shadow: 0 0 0 0 rgba(52, 152, 219, 0); }
        }
        .user-location-dot {
            background-color: #3498db;
            border: 2px solid white;
            border-radius: 50%;
            width: 16px;
            height: 16px;
            animation: pulse 2s infinite;
        }
        
        /* Modal transition */
        .modal-hidden {
            opacity: 0;
            transform: translateY(20px) scale(0.95);
            pointer-events: none;
        }
        .modal-visible {
            opacity: 1;
            transform: translateY(0) scale(1);
            pointer-events: auto;
        }
    </style>
    
    <script>
        // Custom color configuration for Tailwind CSS
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'brand-cream': '#FDFCF9',
                        'brand-terracotta': '#E86A6A',
                        'brand-terracotta-dark': '#E15454',
                        'brand-olive': '#7C8A5B',
                        'brand-text': '#3D3D3D',
                        'pin-blue': '#5DADE2',
                        'pin-yellow': '#F5C451',
                        'pin-green': '#58D68D',
                        'pin-purple': '#AF7AC5',
                    }
                }
            }
        }
    </script>
</head>
<body class="overflow-hidden">

    <div id="app-container" class="h-screen w-screen relative flex flex-col">
        <!-- Map View -->
        <div id="map" class="flex-grow"></div>
        
        <!-- Floating Search Bar -->
        <div class="absolute top-0 left-0 right-0 p-4 z-20">
            <div class="bg-white rounded-full flex items-center shadow-lg p-2">
                <!-- Location Pin Icon -->
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mx-2 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" /></svg>
                <input type="text" placeholder="Search skills near you..." class="w-full bg-transparent focus:outline-none text-brand-text placeholder-gray-400">
                <!-- Filter Icon -->
                <button class="p-2 bg-gray-100 rounded-full ml-2 hover:bg-gray-200 transition">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-brand-text" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2a1 1 0 01-.293.707L16 11.414V16a1 1 0 01-.293.707l-2 2A1 1 0 0112 18v-6.586L3.293 6.707A1 1 0 013 6V4z" /></svg>
                </button>
            </div>
        </div>

        <!-- Floating Action Button -->
        <button id="fab" class="absolute bottom-24 right-6 bg-brand-terracotta text-white w-16 h-16 rounded-full flex items-center justify-center shadow-2xl z-20 hover:bg-brand-terracotta-dark hover:scale-105 transition-transform">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="3"><path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" /></svg>
        </button>
        
        <!-- Bottom Navigation Bar -->
        <nav class="relative bg-white/80 backdrop-blur-sm shadow-[0_-5px_20px_-5px_rgba(0,0,0,0.05)] rounded-t-2xl z-20">
            <div class="flex justify-around items-center h-20 max-w-sm mx-auto">
                <a href="#" class="flex flex-col items-center text-brand-terracotta font-semibold transition-transform hover:scale-110">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" viewBox="0 0 24 24" fill="currentColor"><path d="M21 8.824c0 6.45-8.385 12.01-8.624 12.176a1 1 0 01-1.206-.001C10.932 20.832 3 15.272 3 8.824 3 5.048 6.048 2 9.824 2c2.47 0 4.106 1.341 4.676 2.05a1 1 0 001.453-.001C16.52 3.34 18.156 2 20.627 2 22.87 2 21 5.048 21 8.824zM12 6a1 1 0 100-2 1 1 0 000 2z"/></svg>
                    <span class="text-xs mt-1">Home</span>
                </a>
                <a href="#" class="flex flex-col items-center text-gray-400 hover:text-brand-terracotta transition-colors hover:scale-110">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z" /></svg>
                    <span class="text-xs mt-1">Browse</span>
                </a>
                <a href="#" class="flex flex-col items-center text-gray-400 hover:text-brand-terracotta transition-colors hover:scale-110 relative">
                    <span class="absolute -top-1 -right-1 bg-brand-terracotta text-white text-[10px] font-bold w-4 h-4 rounded-full flex items-center justify-center">3</span>
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" /></svg>
                    <span class="text-xs mt-1">Messages</span>
                </a>
                <a href="#" class="flex flex-col items-center text-gray-400 hover:text-brand-terracotta transition-colors hover:scale-110">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" /></svg>
                    <span class="text-xs mt-1">Profile</span>
                </a>
            </div>
        </nav>
        
        <!-- Modal for 'Offer/Request Skill' -->
        <div id="modal-backdrop" class="fixed inset-0 bg-black/40 z-30 transition-opacity duration-300 modal-hidden"></div>
        <div id="modal" class="fixed bottom-0 left-0 right-0 p-4 z-40 transition-all duration-300 modal-hidden">
            <div class="bg-brand-cream rounded-2xl p-6 text-center shadow-2xl">
                <h3 class="text-xl font-bold text-brand-text mb-2">What would you like to do?</h3>
                <p class="text-brand-text-light mb-6">Share your knowledge or find someone to learn from.</p>
                <div class="space-y-4">
                     <button class="w-full text-white bg-brand-olive hover:bg-brand-olive-dark font-bold py-4 px-6 rounded-xl text-lg transition-all duration-300">Offer a Skill</button>
                     <button class="w-full text-brand-olive border-2 border-brand-olive/50 hover:bg-brand-olive/10 font-bold py-4 px-6 rounded-xl text-lg transition-colors duration-300">Request a Skill</button>
                </div>
                 <button id="close-modal-btn" class="mt-6 text-gray-500 font-semibold">Cancel</button>
            </div>
        </div>

    </div>

    <script>
        // --- MAP INITIALIZATION ---
        // 1. Set coordinates (Jaipur, Rajasthan)
        const mapCenter = [26.9124, 75.7873];
        
        // 2. Create the map instance
        const map = L.map('map', {
            center: mapCenter,
            zoom: 14,
            zoomControl: false, // We'll use a custom one if needed
            attributionControl: false,
        });

        // 3. Add a custom, soft-toned tile layer from Stadia Maps
        L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png', {
            maxZoom: 20,
        }).addTo(map);

        // 4. Add user's location marker
        const userIcon = L.divIcon({
            className: 'user-location-dot',
            iconSize: [16, 16]
        });
        L.marker(mapCenter, { icon: userIcon }).addTo(map);

        // --- SKILL PINS ---
        // Helper function to create custom skill icons
        const createSkillIcon = (svg, colorClass) => {
            return L.divIcon({
                html: `<div class="w-12 h-12 ${colorClass} rounded-full flex items-center justify-center shadow-lg border-2 border-white">${svg}</div>`,
                className: 'transition-transform hover:scale-110 cursor-pointer',
                iconSize: [48, 48],
                iconAnchor: [24, 24]
            });
        };
        
        // Icon SVGs
        const guitarSVG = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-12v10c0 1.105-1.343 2-3 2s-3-.895-3-2V7l-6-2v11" /></svg>`;
        const paintSVG = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01" /></svg>`;
        const codeSVG = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" /></svg>`;
        const wrenchSVG = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" /></svg>`;
        
        // Mock data for skill providers
        const skills = [
            { lat: 26.915, lng: 75.790, type: 'Music', name: 'Aarav S.', rating: 4.8, price: '₹800/hr', icon: createSkillIcon(guitarSVG, 'bg-pin-blue') },
            { lat: 26.920, lng: 75.785, type: 'Art', name: 'Priya K.', rating: 4.9, price: '₹1200/hr', icon: createSkillIcon(paintSVG, 'bg-pin-purple') },
            { lat: 26.910, lng: 75.795, type: 'Coding', name: 'Rohan G.', rating: 5.0, price: '₹1500/hr', icon: createSkillIcon(codeSVG, 'bg-pin-green') },
            { lat: 26.905, lng: 75.780, type: 'Mechanics', name: 'Sunita M.', rating: 4.7, price: '₹500/hr', icon: createSkillIcon(wrenchSVG, 'bg-pin-yellow') },
            { lat: 26.922, lng: 75.801, type: 'Music', name: 'Vikram B.', rating: 4.5, price: '₹750/hr', icon: createSkillIcon(guitarSVG, 'bg-pin-blue') },
        ];
        
        // Add markers to the map
        skills.forEach(skill => {
            const popupContent = `
                <div class="flex items-center space-x-3">
                    <img src="https://placehold.co/50x50/E86A6A/FFFFFF?text=${skill.name.charAt(0)}" alt="${skill.name}" class="w-12 h-12 rounded-full border-2 border-brand-terracotta/50">
                    <div>
                        <h4 class="font-bold text-brand-text">${skill.name}</h4>
                        <p class="text-sm text-gray-600">${skill.type} Teacher</p>
                        <div class="flex items-center mt-1">
                            <span class="font-bold text-pin-yellow mr-1">★ ${skill.rating}</span>
                            <span class="text-xs text-gray-500">• ${skill.price}</span>
                        </div>
                    </div>
                </div>
            `;
            L.marker([skill.lat, skill.lng], { icon: skill.icon }).addTo(map)
                .bindPopup(popupContent);
        });

        // --- MODAL LOGIC ---
        const fab = document.getElementById('fab');
        const modal = document.getElementById('modal');
        const modalBackdrop = document.getElementById('modal-backdrop');
        const closeModalBtn = document.getElementById('close-modal-btn');

        const openModal = () => {
            modal.classList.remove('modal-hidden');
            modal.classList.add('modal-visible');
            modalBackdrop.classList.remove('modal-hidden');
            modalBackdrop.classList.add('modal-visible');
        };

        const closeModal = () => {
            modal.classList.add('modal-hidden');
            modal.classList.remove('modal-visible');
            modalBackdrop.classList.add('modal-hidden');
            modalBackdrop.classList.remove('modal-visible');
        };

        fab.addEventListener('click', openModal);
        closeModalBtn.addEventListener('click', closeModal);
        modalBackdrop.addEventListener('click', closeModal);
    </script>

</body>
</html>
